package LinterDSL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCheck = createDescriptorForCheck();
  /*package*/ final ConceptDescriptor myConceptLinter = createDescriptorForLinter();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCheck, myConceptLinter);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Check:
        return myConceptCheck;
      case LanguageConceptSwitch.Linter:
        return myConceptLinter;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCheck() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LinterDSL", "Check", 0xc400f4156edc4c5fL, 0xa0ceccbb04f551e6L, 0x74695853078e2ae8L);
    b.class_(false, true, false);
    b.origin("r:21d30a29-243b-40e8-a51d-38ea30739819(LinterDSL.structure)/8388332894586546920");
    b.version(2);
    b.property("name", 0x74695853078e2ae9L).type(PrimitiveTypeId.STRING).origin("8388332894586546921").done();
    b.property("id", 0x74695853078e2af2L).type(PrimitiveTypeId.STRING).origin("8388332894586546930").done();
    b.property("description", 0x74695853078e2aebL).type(PrimitiveTypeId.STRING).origin("8388332894586546923").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLinter() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LinterDSL", "Linter", 0xc400f4156edc4c5fL, 0xa0ceccbb04f551e6L, 0x74695853078e2ad1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:21d30a29-243b-40e8-a51d-38ea30739819(LinterDSL.structure)/8388332894586546897");
    b.version(2);
    b.property("description", 0x74695853078e2ad8L).type(PrimitiveTypeId.STRING).origin("8388332894586546904").done();
    b.property("framework", 0x74695853078e2b1eL).type(PrimitiveTypeId.STRING).origin("8388332894586546974").done();
    b.aggregate("checks", 0x74695853078e2ae6L).target(0xc400f4156edc4c5fL, 0xa0ceccbb04f551e6L, 0x74695853078e2ae8L).optional(true).ordered(true).multiple(true).origin("8388332894586546918").done();
    return b.create();
  }
}
