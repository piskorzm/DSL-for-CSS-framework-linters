package LinterDSL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Attribute = 0;
  public static final int Check = 1;
  public static final int ChildrenTypeCheck = 2;
  public static final int ClassMisuseCheck = 3;
  public static final int CustomCheck = 4;
  public static final int Linter = 5;
  public static final int MissingAttributeCheck = 6;
  public static final int MissingTagCheck = 7;
  public static final int ParentTypeCheck = 8;
  public static final int Selector = 9;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xc400f4156edc4c5fL, 0xa0ceccbb04f551e6L);
    builder.put(0x472d73cdfe35f69bL, Attribute);
    builder.put(0x74695853078e2ae8L, Check);
    builder.put(0x472d73cdfe35f5d5L, ChildrenTypeCheck);
    builder.put(0x472d73cdfe35f711L, ClassMisuseCheck);
    builder.put(0x1419e78e679184d5L, CustomCheck);
    builder.put(0x74695853078e2ad1L, Linter);
    builder.put(0x472d73cdfe35f6acL, MissingAttributeCheck);
    builder.put(0x472d73cdfe350f81L, MissingTagCheck);
    builder.put(0x709bab50272a6dcaL, ParentTypeCheck);
    builder.put(0x1419e78e6791ffedL, Selector);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
