package LinterDSL.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AllowedChildrenCheck = 0;
  public static final int AttributeSelector = 1;
  public static final int Check = 2;
  public static final int ClassPatternSelector = 3;
  public static final int ClassSelector = 4;
  public static final int CustomSelector = 5;
  public static final int DirectParentCheck = 6;
  public static final int GroupSelector = 7;
  public static final int InvalidElementCheck = 8;
  public static final int Linter = 9;
  public static final int MissingElementCheck = 10;
  public static final int MisuseCheck = 11;
  public static final int NotSelector = 12;
  public static final int PredecessorsCheck = 13;
  public static final int ReferenceSelector = 14;
  public static final int RequiredChildCheck = 15;
  public static final int Selector = 16;
  public static final int SelectorDefinition = 17;
  public static final int TypeSelector = 18;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xc400f4156edc4c5fL, 0xa0ceccbb04f551e6L);
    builder.put(0x472d73cdfe35f5d5L, AllowedChildrenCheck);
    builder.put(0x704031341929f121L, AttributeSelector);
    builder.put(0x74695853078e2ae8L, Check);
    builder.put(0x4c70f606bbda3ceeL, ClassPatternSelector);
    builder.put(0x704031341929f113L, ClassSelector);
    builder.put(0x704031341929f122L, CustomSelector);
    builder.put(0x709bab50272a6dcaL, DirectParentCheck);
    builder.put(0x704031341929f116L, GroupSelector);
    builder.put(0x3d485cfa289b3f77L, InvalidElementCheck);
    builder.put(0x74695853078e2ad1L, Linter);
    builder.put(0x472d73cdfe350f81L, MissingElementCheck);
    builder.put(0x472d73cdfe35f711L, MisuseCheck);
    builder.put(0x1634cab96f676dL, NotSelector);
    builder.put(0x686f417f617be32cL, PredecessorsCheck);
    builder.put(0x4c70f606bbdebc38L, ReferenceSelector);
    builder.put(0x7d9d4177b0175848L, RequiredChildCheck);
    builder.put(0x1419e78e6791ffedL, Selector);
    builder.put(0x4c70f606bbdebb96L, SelectorDefinition);
    builder.put(0x704031341929f11bL, TypeSelector);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
